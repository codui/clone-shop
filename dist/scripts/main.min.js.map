{"version":3,"sources":["main.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","h","f","Error","s","done","method","arg","delegate","maybeInvokeDelegate","TypeError","y","tryCatch","type","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","p","l","call","GeneratorFunction","GeneratorFunctionPrototype","d","this","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","callInvokeWithMethodAndArg","invoke","_typeof","resolve","__await","then","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","_n","Array","isArray","_unsupportedIterableToArray","F","_arrayLikeToArray","toString","from","test","hoursCellArray","minutesCellArray","secondsCellArray","getElementsByClassName","showTimeToMidnight","now","Date","nowHours","getHours","nowMinutes","getMinutes","launchShowTimeToMidnight","document","_step","_iterator","secondsToMidnight","hoursToMidnight","getSeconds","nowSeconds","String","err","_step2","_iterator2","textContent","minutesToMidnight","_iterator3","item","getHoursToMidnight","_step3","querySelector","sliderCellArr","querySelectorAll","sliderCell","getSecondsToMidnight","sliderDots","rightButton","nextActiveElementNumber","setTimeout","timerId","widthSliderCell","offsetWidth","sliderWidth","resizeSlider","slider","style","left","sliderRow","launchSlider","width","concat","dotsLiveCollection","leftButton","processLeftClickArrow","event","undefined","offset","overflow","target","contains","processRightClickArrow","timeIsStop","isTrusted","clearInterval","classList","processDotClick","dotActiveNumberElement","indexOf","dotActiveElement","remove","add","addEventListener","window","launchTelegramBot"],"mappings":"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","file":"main.min.js","sourcesContent":["// The script must run after the HTML page has loaded\r\n/**\r\n* TIMER\r\n*/\r\n\r\nfunction launchShowTimeToMidnight() {\r\n    let hoursCellArray = document.getElementsByClassName('hours');\r\n    let minutesCellArray = document.getElementsByClassName('minutes');\r\n    let secondsCellArray = document.getElementsByClassName('seconds');\r\n\r\n    function showTimeToMidnight() {\r\n        let now = new Date();\r\n        let nowHours = now.getHours();\r\n        let nowMinutes = now.getMinutes();\r\n        let nowSeconds = now.getSeconds();\r\n\r\n        let hoursToMidnight = 0;\r\n        let minutesToMidnight = 0;\r\n        let secondsToMidnight = 0;\r\n\r\n        // Get hours to midnight\r\n        function getHoursToMidnight() {\r\n            if (nowMinutes === 0 && nowSeconds === 0) {\r\n                hoursToMidnight = 24 - nowHours;\r\n            } else {\r\n                hoursToMidnight = 23 - nowHours;\r\n            }\r\n            hoursToMidnight = String(hoursToMidnight);\r\n            return hoursToMidnight.length === 2 ? hoursToMidnight : '0' + hoursToMidnight;\r\n        }\r\n\r\n        // Get minutes to midnight\r\n        function getMinutesToMidnight() {\r\n            if (nowMinutes === 0 && nowSeconds === 0) {\r\n                minutesToMidnight = 0;\r\n            } else {\r\n                minutesToMidnight = 59 - nowMinutes;\r\n            }\r\n            minutesToMidnight = String(minutesToMidnight);\r\n            return minutesToMidnight.length === 2 ? minutesToMidnight : '0' + minutesToMidnight;\r\n        }\r\n\r\n        // Get seconds to midnight\r\n        function getSecondsToMidnight() {\r\n            if (nowSeconds === 0) {\r\n                secondsToMidnight = 0;\r\n            } else {\r\n                secondsToMidnight = 60 - nowSeconds;\r\n            }\r\n            secondsToMidnight = String(secondsToMidnight);\r\n            return secondsToMidnight.length === 2 ? secondsToMidnight : '0' + secondsToMidnight;\r\n        }\r\n\r\n        // Update timer cells\r\n\r\n        for (let item of hoursCellArray) {\r\n            item.textContent = getHoursToMidnight();\r\n        }\r\n        for (let item of minutesCellArray) {\r\n            item.textContent = getMinutesToMidnight();\r\n        }\r\n        for (let item of secondsCellArray) {\r\n            item.textContent = getSecondsToMidnight();\r\n        }\r\n\r\n\r\n        setTimeout(showTimeToMidnight, 200);\r\n    }\r\n\r\n\r\n    showTimeToMidnight();\r\n\r\n}\r\n\r\n\r\nlaunchShowTimeToMidnight();\r\n\r\n\r\n/**\r\n * \r\n * \r\n * - - - SLIDER - - -\r\n * \r\n * \r\n */\r\nfunction launchSlider() {\r\n    const sliderRow = document.querySelector('.slider__row');\r\n    const sliderCellArr = document.querySelectorAll('.slider__cell'); // NodeList, pseudo-array\r\n    const sliderCell = document.querySelector('.slider__cell');\r\n    \r\n    const dotsLiveCollection = document.getElementsByClassName('slider-dots__item'); // HTMLCollection\r\n    const sliderDots = document.querySelector('.slider-dots'); // DOM element\r\n    \r\n    const leftButton = document.querySelector('.slider__button_left');\r\n    const rightButton = document.querySelector('.slider__button_right');\r\n    \r\n    let nextActiveElementNumber = 0;\r\n    let offset = 0; // Offset from left side\r\n    \r\n    let timeIsStop = false;\r\n    let timerId = 0;\r\n    \r\n    let widthSliderCell = sliderCell.offsetWidth; // 440\r\n    let sliderWidth = 0;\r\n\r\n    \r\n    function resizeSlider() {\r\n        let slider = document.querySelector('.slider');\r\n        sliderWidth = slider.offsetWidth;\r\n        sliderDots.style.left = (sliderWidth / 2) + 'px';\r\n        sliderRow.style.width = `${sliderWidth * sliderCellArr.length}px`;\r\n        sliderCellArr.forEach( (item) => {\r\n            item.children[0].style.width = `${sliderWidth}px`;\r\n        })\r\n        if (window.screen.width < 501) {\r\n            slider.style.overflow = 'hidden';\r\n        } else {\r\n            slider.style.overflow = 'visible';\r\n        }\r\n        return sliderWidth;\r\n    }\r\n\r\n\r\n    function processLeftClickArrow(event, nextActiveElementNumber = 1) {\r\n        widthSliderCell = resizeSlider();\r\n        // Stopping the automatic operation of the slider\r\n        if (event.isTrusted) {\r\n            clearInterval(timerId);\r\n            timeIsStop = true;\r\n        }\r\n        // Handling the movement of slider cells\r\n        offset = offset - (widthSliderCell * nextActiveElementNumber); // ! WORK HERE\r\n        if (offset < 0) {\r\n            offset = widthSliderCell * (sliderCellArr.length - 1);\r\n        }\r\n        sliderRow.style.left = -offset + 'px';\r\n        // Moving slider points one at a time when the user clicks on the arrow\r\n        if (event.target.classList.contains('slider__button_left')) {\r\n            // Move slider dots\r\n            processDotClick(event);\r\n        }\r\n    }\r\n\r\n\r\n    function processRightClickArrow(event, nextActiveElementNumber = 1) {\r\n        widthSliderCell = resizeSlider();\r\n        // Stopping the automatic operation of the slider\r\n        if (event.isTrusted) {\r\n            clearInterval(timerId);\r\n            timeIsStop = true;\r\n        }\r\n        // Handling the movement of slider cells\r\n        offset = offset + (widthSliderCell * nextActiveElementNumber); // ! WORK HERE\r\n        if (offset > widthSliderCell * 2) {\r\n            offset = 0;\r\n        }\r\n        sliderRow.style.left = -offset + 'px';\r\n        // Moving slider points one at a time when the user clicks on the arrow\r\n        if (event.target.classList.contains('slider__button_right')) {\r\n            // Move slider dots\r\n            processDotClick(event);\r\n        }\r\n    }\r\n\r\n\r\n    function processDotClick(event) {\r\n        // DOM element\r\n        const dotActiveElement = document.getElementsByClassName('slider-dots__item_active')[0];\r\n        // NUMBER active dot\r\n        let dotActiveNumberElement = Array.from(dotsLiveCollection).indexOf(dotActiveElement);\r\n        // REMOVE from active dot class '.slider-dots__item_active'\r\n        dotActiveElement.classList.remove('slider-dots__item_active');\r\n        // Processing left click on arrow\r\n        if (event.target.classList.contains('slider__button_left')) {\r\n            nextActiveElementNumber--;\r\n            if (nextActiveElementNumber < 0) {\r\n                nextActiveElementNumber = dotsLiveCollection.length - 1;\r\n            }\r\n        }\r\n        // Processing right click on arrow\r\n        if (event.target.classList.contains('slider__button_right')) {\r\n            nextActiveElementNumber++;\r\n            if (nextActiveElementNumber > dotsLiveCollection.length - 1) {\r\n                nextActiveElementNumber = 0;\r\n            }\r\n        }\r\n        // Processing click on dots\r\n        if (event.target.classList.contains('slider-dots__item')) {\r\n            nextActiveElementNumber = Array.from(dotsLiveCollection).indexOf(event.target); // Number\r\n            // Processing move dot to the right\r\n            if (nextActiveElementNumber > dotActiveNumberElement && nextActiveElementNumber <= (dotsLiveCollection.length - 1)) {\r\n                processRightClickArrow(event, nextActiveElementNumber - dotActiveNumberElement);\r\n            }\r\n            // Processing move dot to the left\r\n            if (nextActiveElementNumber < dotActiveNumberElement && nextActiveElementNumber >= 0) {\r\n                processLeftClickArrow(event, dotActiveNumberElement - nextActiveElementNumber);\r\n            }\r\n        }\r\n        // Add to next active dot class '.slider-dots__item_active'\r\n        dotsLiveCollection[nextActiveElementNumber].classList.add('slider-dots__item_active');\r\n    }\r\n\r\n\r\n    timerId = setInterval(function () {\r\n        rightButton.click();\r\n    }, 2000);\r\n\r\n    leftButton.addEventListener('click', processLeftClickArrow);\r\n    rightButton.addEventListener('click', processRightClickArrow);\r\n    sliderDots.addEventListener('click', processDotClick)\r\n    window.addEventListener('resize', resizeSlider);\r\n    resizeSlider()\r\n}\r\n\r\n\r\nlaunchSlider();\r\n\r\n\r\n/**\r\n * \r\n * \r\n * - - - TELEGRAM BOT - - -\r\n * \r\n */\r\nfunction launchTelegramBot() {\r\n    // API - address where we send the request\r\n    const API = '/api/send-message';\r\n\r\n    async function sendEmailTelegram(event) {\r\n        event.preventDefault();\r\n\r\n        const form = event.target;\r\n        const formBtn = document.querySelector('#form-order #order-button');\r\n        const formData = new FormData(form);\r\n        const fromDataObject = Object.fromEntries(formData.entries());\r\n\r\n        const { name, phone } = fromDataObject;\r\n\r\n        try {\r\n            formBtn.textContent = 'Не закривайте цю сторінку, доки надсилаються дані...';\r\n            const response = await fetch(API, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ name, phone })\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Дякуємо! Ваше замовлення прийнято. Ми зв`яжемось з Вами найближчим часом.');\r\n                form.reset();\r\n            } else {\r\n                throw new Error('Failed to send message');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert('Нажаль ми не отримали Ваші дані. Будь-ласка, знову введіть Ваші дані та натисність на кнопку \"ОФОРМИТИ ЗАМОВЛЕННЯ\".');\r\n        } finally {\r\n            formBtn.textContent = 'ОФОРМИТИ ЗАМОВЛЕННЯ';\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlaunchTelegramBot();\r\n"]}