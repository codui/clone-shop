{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["// The script must run after the HTML page has loaded\r\n/**\r\n* TIMER\r\n*/\r\n\r\nfunction launchShowTimeToMidnight() {\r\n    let hoursCellArray = document.getElementsByClassName('hours');\r\n    let minutesCellArray = document.getElementsByClassName('minutes');\r\n    let secondsCellArray = document.getElementsByClassName('seconds');\r\n\r\n    function showTimeToMidnight() {\r\n        let now = new Date();\r\n        let nowHours = now.getHours();\r\n        let nowMinutes = now.getMinutes();\r\n        let nowSeconds = now.getSeconds();\r\n\r\n        let hoursToMidnight = 0;\r\n        let minutesToMidnight = 0;\r\n        let secondsToMidnight = 0;\r\n\r\n        // Get hours to midnight\r\n        function getHoursToMidnight() {\r\n            if (nowMinutes === 0 && nowSeconds === 0) {\r\n                hoursToMidnight = 24 - nowHours;\r\n            } else {\r\n                hoursToMidnight = 23 - nowHours;\r\n            }\r\n            hoursToMidnight = String(hoursToMidnight);\r\n            return hoursToMidnight.length === 2 ? hoursToMidnight : '0' + hoursToMidnight;\r\n        }\r\n\r\n        // Get minutes to midnight\r\n        function getMinutesToMidnight() {\r\n            if (nowMinutes === 0 && nowSeconds === 0) {\r\n                minutesToMidnight = 0;\r\n            } else {\r\n                minutesToMidnight = 59 - nowMinutes;\r\n            }\r\n            minutesToMidnight = String(minutesToMidnight);\r\n            return minutesToMidnight.length === 2 ? minutesToMidnight : '0' + minutesToMidnight;\r\n        }\r\n\r\n        // Get seconds to midnight\r\n        function getSecondsToMidnight() {\r\n            if (nowSeconds === 0) {\r\n                secondsToMidnight = 0;\r\n            } else {\r\n                secondsToMidnight = 60 - nowSeconds;\r\n            }\r\n            secondsToMidnight = String(secondsToMidnight);\r\n            return secondsToMidnight.length === 2 ? secondsToMidnight : '0' + secondsToMidnight;\r\n        }\r\n\r\n        // Update timer cells\r\n\r\n        for (let item of hoursCellArray) {\r\n            item.textContent = getHoursToMidnight();\r\n        }\r\n        for (let item of minutesCellArray) {\r\n            item.textContent = getMinutesToMidnight();\r\n        }\r\n        for (let item of secondsCellArray) {\r\n            item.textContent = getSecondsToMidnight();\r\n        }\r\n\r\n\r\n        setTimeout(showTimeToMidnight, 200);\r\n    }\r\n\r\n\r\n    showTimeToMidnight();\r\n\r\n}\r\n\r\n\r\nlaunchShowTimeToMidnight();\r\n\r\n\r\n/**\r\n * \r\n * \r\n * - - - SLIDER - - -\r\n * \r\n * \r\n */\r\nfunction launchSlider() {\r\n    const sliderRow = document.querySelector('.slider__row');\r\n    const sliderCellArr = document.querySelectorAll('.slider__cell'); // NodeList, pseudo-array\r\n    const sliderCell = document.querySelector('.slider__cell');\r\n    const widthSliderCell = sliderCell.offsetWidth; // 440\r\n    \r\n    const dotsLiveCollection = document.getElementsByClassName('slider-dots__item'); // HTMLCollection\r\n    const sliderDots = document.querySelector('.slider-dots'); // DOM element\r\n\r\n    const leftButton = document.querySelector('.slider__arrows_left');\r\n    const rightButton = document.querySelector('.slider__arrows_right');\r\n\r\n    let nextActiveElementNumber = 0;\r\n    let offset = 0; // Offset from left side\r\n\r\n    function processLeftClickArrow(event, nextActiveElementNumber = 1) {\r\n        if (event.target.classList.contains('slider__arrows_left')) {\r\n            // Move slider dots\r\n            processDotClick(event);\r\n        }\r\n        offset = offset - (widthSliderCell * nextActiveElementNumber); // ! WORK HERE\r\n        if (offset < 0) {\r\n            offset = widthSliderCell * (sliderCellArr.length - 1);\r\n        }\r\n        sliderRow.style.left = -offset + 'px';\r\n    }\r\n\r\n\r\n    function processRightClickArrow(event, nextActiveElementNumber = 1) {\r\n        if (event.target.classList.contains('slider__arrows_right')) {\r\n            // Move slider dots\r\n            processDotClick(event);\r\n        }\r\n        offset = offset + (widthSliderCell * nextActiveElementNumber); // ! WORK HERE\r\n        if (offset > widthSliderCell * 2) {\r\n            offset = 0;\r\n        }\r\n        sliderRow.style.left = -offset + 'px';\r\n    }\r\n\r\n\r\n    function processDotClick(event) {\r\n        // DOM element\r\n        const dotActiveElement = document.getElementsByClassName('slider-dots__item_active')[0];\r\n        // NUMBER active dot\r\n        let dotActiveNumberElement = Array.from(dotsLiveCollection).indexOf(dotActiveElement);\r\n        // REMOVE from active dot class '.slider-dots__item_active'\r\n        dotActiveElement.classList.remove('slider-dots__item_active');\r\n        // Processing left click on arrow\r\n        if (event.target.classList.contains('slider__arrows_left')) {\r\n            nextActiveElementNumber--;\r\n            if (nextActiveElementNumber < 0) {\r\n                nextActiveElementNumber = dotsLiveCollection.length - 1;\r\n            }\r\n        }\r\n        // Processing right click on arrow\r\n        if (event.target.classList.contains('slider__arrows_right')) {\r\n            nextActiveElementNumber++;\r\n            if (nextActiveElementNumber > dotsLiveCollection.length - 1) {\r\n                nextActiveElementNumber = 0;\r\n            }\r\n        }\r\n        // Processing click on dots\r\n        if (event.target.classList.contains('slider-dots__item')) {\r\n            nextActiveElementNumber = Array.from(dotsLiveCollection).indexOf(event.target); // Number\r\n            // Processing move dot to the right\r\n            if (nextActiveElementNumber > dotActiveNumberElement && nextActiveElementNumber <= (dotsLiveCollection.length - 1)) {\r\n                processRightClickArrow(event, nextActiveElementNumber - dotActiveNumberElement);\r\n            }\r\n\r\n            // Processing move dot to the left\r\n            if (nextActiveElementNumber < dotActiveNumberElement && nextActiveElementNumber >= 0 ) {\r\n                processLeftClickArrow(event, dotActiveNumberElement - nextActiveElementNumber);\r\n            }\r\n        }\r\n        // Add to next active dot class '.slider-dots__item_active'\r\n        dotsLiveCollection[nextActiveElementNumber].classList.add('slider-dots__item_active');\r\n    }\r\n\r\n    leftButton.addEventListener('click', processLeftClickArrow);\r\n    rightButton.addEventListener('click', processRightClickArrow);\r\n    sliderDots.addEventListener('click', processDotClick)\r\n}\r\n\r\n\r\nlaunchSlider();\r\n\r\n\r\n/**\r\n * \r\n * \r\n * - - - TELEGRAM BOT - - -\r\n * \r\n */\r\nfunction launchTelegramBot() {\r\n    // API - address where we send the request\r\n    const API = '/api/send-message';\r\n\r\n    async function sendEmailTelegram(event) {\r\n        event.preventDefault();\r\n\r\n        const form = event.target;\r\n        const formBtn = document.querySelector('#form-order #order-button');\r\n        const formData = new FormData(form);\r\n        const fromDataObject = Object.fromEntries(formData.entries());\r\n\r\n        const { name, phone } = fromDataObject;\r\n\r\n        try {\r\n            formBtn.textContent = 'Не закривайте цю сторінку, доки надсилаються дані...';\r\n            const response = await fetch(API, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ name, phone })\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Дякуємо! Ваше замовлення прийнято. Ми зв`яжемось з Вами найближчим часом.');\r\n                form.reset();\r\n            } else {\r\n                throw new Error('Failed to send message');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert('Нажаль ми не отримали Ваші дані. Будь-ласка, знову введіть Ваші дані та натисність на кнопку \"ОФОРМИТИ ЗАМОВЛЕННЯ\".');\r\n        } finally {\r\n            formBtn.textContent = 'ОФОРМИТИ ЗАМОВЛЕННЯ';\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlaunchTelegramBot();\r\n"]}